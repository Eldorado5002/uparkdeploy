{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nagas\\\\Desktop\\\\Uparkweb\\\\frontend\\\\src\\\\pages\\\\Index.jsx\",\n  _s = $RefreshSig$();\n// src/pages/Index.jsx\nimport React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport socketService from \"../services/socketService\";\nimport SlotReservation from \"../components/SlotReservation\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Index() {\n  _s();\n  const navigate = useNavigate();\n  const user = (() => {\n    try {\n      return JSON.parse(localStorage.getItem('upark_user') || 'null');\n    } catch {\n      return null;\n    }\n  })();\n  const logout = () => {\n    localStorage.removeItem('upark_token');\n    localStorage.removeItem('upark_user');\n    navigate('/signup');\n  };\n  const [availableSlots, setAvailableSlots] = useState(0);\n  const [totalSlots] = useState(6);\n  const [gateStatus, setGateStatus] = useState(\"CLOSED\");\n  const [entryGateStatus, setEntryGateStatus] = useState(\"CLOSED\");\n  const [exitGateStatus, setExitGateStatus] = useState(\"CLOSED\");\n  const [freeSlotsList, setFreeSlotsList] = useState([]);\n  const [isSystemOnline, setIsSystemOnline] = useState(false);\n  const [showWelcomePopup, setShowWelcomePopup] = useState(true);\n  const [activeTab, setActiveTab] = useState('monitor');\n  const [realtimeSlots, setRealtimeSlots] = useState([]);\n  useEffect(() => {\n    console.log(\"Index page loaded\");\n\n    // Initialize slots by fetching from database\n    const initializeSlots = async () => {\n      try {\n        console.log('Fetching initial slots from database...');\n        const response = await fetch('/api/slots');\n        const data = await response.json();\n        if (data.success && data.slots) {\n          setRealtimeSlots(data.slots);\n          console.log('Initialized slots from database:', data.slots);\n        } else {\n          // Fallback to default initialization\n          const initialSlots = [];\n          for (let i = 1; i <= totalSlots; i++) {\n            initialSlots.push({\n              slotNumber: i,\n              isOccupied: false,\n              isReserved: false,\n              location: `A${i}`,\n              slotType: 'BOTH'\n            });\n          }\n          setRealtimeSlots(initialSlots);\n        }\n      } catch (error) {\n        console.error('Error fetching initial slots:', error);\n        // Fallback to default initialization\n        const initialSlots = [];\n        for (let i = 1; i <= totalSlots; i++) {\n          initialSlots.push({\n            slotNumber: i,\n            isOccupied: false,\n            isReserved: false,\n            location: `A${i}`,\n            slotType: 'BOTH'\n          });\n        }\n        setRealtimeSlots(initialSlots);\n      }\n    };\n    initializeSlots();\n\n    // Subscribe to real-time updates from the ESP32\n    const unsubscribeSlot = socketService.subscribeToSlotUpdates(data => {\n      setIsSystemOnline(true);\n      console.log(\"Slot update received:\", data);\n      let freeSlots = [];\n\n      // Handle slot status updates\n      if (data === \"FULL\") {\n        setAvailableSlots(0);\n        setFreeSlotsList([]);\n        freeSlots = [];\n      } else {\n        // Parse comma-separated list of available slots\n        freeSlots = data.split(\",\").map(Number);\n        setFreeSlotsList(freeSlots);\n        setAvailableSlots(freeSlots.length);\n      }\n\n      // Update realtime slots structure to match hardware data\n      // IMPORTANT: Only update isOccupied, preserve reservation status\n      setRealtimeSlots(prevSlots => prevSlots.map(slot => ({\n        ...slot,\n        // A slot is occupied if it's not in the free list AND not reserved\n        // Reserved slots should not be marked as occupied even if sensor detects something\n        isOccupied: !freeSlots.includes(slot.slotNumber) && !slot.isReserved\n      })));\n    });\n\n    // Subscribe to database slot updates (for reservations)\n    const unsubscribeDatabaseSlot = socketService.subscribeToDatabaseSlotUpdates(data => {\n      console.log(\"Database slot update received:\", data);\n      // Update the realtime slots with reservation info\n      setRealtimeSlots(prevSlots => prevSlots.map(slot => slot.slotNumber === data.slotNumber ? {\n        ...slot,\n        isOccupied: data.isOccupied,\n        isReserved: data.isReserved,\n        reservedBy: data.reservedBy || null,\n        vehicleNumberPlate: data.vehicleNumberPlate || null\n      } : slot));\n\n      // If a slot gets reserved, update the free slots list to exclude it\n      if (data.isReserved) {\n        setFreeSlotsList(prev => prev.filter(slotNum => slotNum !== data.slotNumber));\n      } else if (!data.isOccupied) {\n        // If a slot gets unreserved and not occupied, add it to free slots\n        setFreeSlotsList(prev => {\n          if (!prev.includes(data.slotNumber)) {\n            return [...prev, data.slotNumber].sort();\n          }\n          return prev;\n        });\n      }\n    });\n    const unsubscribeGate = socketService.subscribeToGateUpdates(data => {\n      setIsSystemOnline(true); // Mark system as online when any data is received\n      console.log(\"Gate update received:\", data);\n      setGateStatus(data);\n    });\n    const unsubscribeEntryGate = socketService.subscribeToEntryGateUpdates(data => {\n      setIsSystemOnline(true);\n      setEntryGateStatus(String(data || '').toUpperCase());\n    });\n    const unsubscribeExitGate = socketService.subscribeToExitGateUpdates(data => {\n      setIsSystemOnline(true);\n      setExitGateStatus(String(data || '').toUpperCase());\n    });\n    const unsubscribeDevice = socketService.subscribeToDeviceStatus(data => {\n      setIsSystemOnline(true); // Mark system as online when any data is received\n      console.log(\"Device status update:\", data);\n    });\n\n    // Cleanup subscriptions on component unmount\n    return () => {\n      unsubscribeSlot();\n      unsubscribeDatabaseSlot();\n      unsubscribeGate();\n      unsubscribeEntryGate();\n      unsubscribeExitGate();\n      unsubscribeDevice();\n    };\n  }, [totalSlots]);\n\n  // Update available slots count whenever realtime slots change\n  useEffect(() => {\n    const available = realtimeSlots.filter(slot => !slot.isOccupied && !slot.isReserved).length;\n    setAvailableSlots(available);\n  }, [realtimeSlots]);\n\n  // Function to determine slot CSS class based on occupancy and reservation status\n  const getSlotClass = slotNumber => {\n    const slot = realtimeSlots.find(s => s.slotNumber === slotNumber);\n    if (!slot) {\n      // Fallback to old logic if slot not found in realtime data\n      return freeSlotsList.includes(slotNumber) ? \"slot available\" : \"slot occupied\";\n    }\n    if (slot.isReserved) return \"slot reserved\";\n    if (slot.isOccupied) return \"slot occupied\";\n    return \"slot available\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [showWelcomePopup && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\",\n        onClick: () => setShowWelcomePopup(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome to the Intelligent Urban Parking System\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"system-status\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status-indicator ${isSystemOnline ? 'online' : 'offline'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `status-dot ${isSystemOnline ? 'online' : 'offline'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), \"System \", isSystemOnline ? 'Online' : 'Offline']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setShowWelcomePopup(false),\n          children: \"Get Started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Smart Parking System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subtitle\",\n        children: \"Real-time parking lot monitoring\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"device-status\",\n        children: [\"System:\", \" \", isSystemOnline && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-online\",\n          children: \"ONLINE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Signed in as \", user.name, \" (\", user.phone, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), Array.isArray(user.vehicles) && user.vehicles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Vehicles: \", user.vehicles.map(v => `${v.type}:${v.numberPlate}`).join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginLeft: 8\n          },\n          onClick: logout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'monitor' ? 'active' : ''}`,\n          onClick: () => setActiveTab('monitor'),\n          children: \"\\uD83D\\uDCCA Live Monitor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'reserve' ? 'active' : ''}`,\n          onClick: () => setActiveTab('reserve'),\n          children: \"\\uD83D\\uDE97 Reserve Slot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), activeTab === 'monitor' ? /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"status-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Parking Availability\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"availability-display\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"count-display\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"available-count\",\n                children: availableSlots\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"count-label\",\n                children: \"Available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"count-display\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"total-count\",\n                children: totalSlots\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"count-label\",\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slots-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Slot Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"parking-grid\",\n              children: Array.from({\n                length: totalSlots\n              }, (_, i) => i + 1).map(slotNum => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: getSlotClass(slotNum),\n                id: `slot-${slotNum}`,\n                children: slotNum\n              }, slotNum, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Gate Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gate-status\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `gate-indicator ${gateStatus === \"OPEN\" ? \"open\" : \"closed\"}`,\n              id: \"gate-indicator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"gate-status-text\",\n              children: gateStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gate-info\",\n            style: {\n              marginTop: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Entry: \", entryGateStatus, \" | Exit: \", exitGateStatus]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gate-info\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"The gate automatically opens when a vehicle is detected and parking space is available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"reservation-section\",\n        children: /*#__PURE__*/_jsxDEV(SlotReservation, {\n          user: user,\n          realtimeSlots: realtimeSlots\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2025 Smart Parking System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/admin\",\n        className: \"admin-link\",\n        children: \"Admin Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n}\n_s(Index, \"rdg4M01cHZvEj5116rApHuyUkNU=\", false, function () {\n  return [useNavigate];\n});\n_c = Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","socketService","SlotReservation","jsxDEV","_jsxDEV","Fragment","_Fragment","Index","_s","navigate","user","JSON","parse","localStorage","getItem","logout","removeItem","availableSlots","setAvailableSlots","totalSlots","gateStatus","setGateStatus","entryGateStatus","setEntryGateStatus","exitGateStatus","setExitGateStatus","freeSlotsList","setFreeSlotsList","isSystemOnline","setIsSystemOnline","showWelcomePopup","setShowWelcomePopup","activeTab","setActiveTab","realtimeSlots","setRealtimeSlots","console","log","initializeSlots","response","fetch","data","json","success","slots","initialSlots","i","push","slotNumber","isOccupied","isReserved","location","slotType","error","unsubscribeSlot","subscribeToSlotUpdates","freeSlots","split","map","Number","length","prevSlots","slot","includes","unsubscribeDatabaseSlot","subscribeToDatabaseSlotUpdates","reservedBy","vehicleNumberPlate","prev","filter","slotNum","sort","unsubscribeGate","subscribeToGateUpdates","unsubscribeEntryGate","subscribeToEntryGateUpdates","String","toUpperCase","unsubscribeExitGate","subscribeToExitGateUpdates","unsubscribeDevice","subscribeToDeviceStatus","available","getSlotClass","find","s","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","name","phone","Array","isArray","vehicles","v","type","numberPlate","join","marginLeft","id","from","_","to","_c","$RefreshReg$"],"sources":["C:/Users/nagas/Desktop/Uparkweb/frontend/src/pages/Index.jsx"],"sourcesContent":["// src/pages/Index.jsx\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./style.css\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport socketService from \"../services/socketService\";\r\nimport SlotReservation from \"../components/SlotReservation\";\r\n\r\nexport default function Index() {\r\n  const navigate = useNavigate();\r\n  const user = (() => {\r\n    try { return JSON.parse(localStorage.getItem('upark_user') || 'null'); } catch { return null; }\r\n  })();\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('upark_token');\r\n    localStorage.removeItem('upark_user');\r\n    navigate('/signup');\r\n  };\r\n  const [availableSlots, setAvailableSlots] = useState(0);\r\n  const [totalSlots] = useState(6);\r\n  const [gateStatus, setGateStatus] = useState(\"CLOSED\");\r\n  const [entryGateStatus, setEntryGateStatus] = useState(\"CLOSED\");\r\n  const [exitGateStatus, setExitGateStatus] = useState(\"CLOSED\");\r\n  const [freeSlotsList, setFreeSlotsList] = useState([]);\r\n  const [isSystemOnline, setIsSystemOnline] = useState(false);\r\n  const [showWelcomePopup, setShowWelcomePopup] = useState(true);\r\n  const [activeTab, setActiveTab] = useState('monitor');\r\n  const [realtimeSlots, setRealtimeSlots] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Index page loaded\");\r\n    \r\n    // Initialize slots by fetching from database\r\n    const initializeSlots = async () => {\r\n      try {\r\n        console.log('Fetching initial slots from database...');\r\n        const response = await fetch('/api/slots');\r\n        const data = await response.json();\r\n        if (data.success && data.slots) {\r\n          setRealtimeSlots(data.slots);\r\n          console.log('Initialized slots from database:', data.slots);\r\n        } else {\r\n          // Fallback to default initialization\r\n          const initialSlots = [];\r\n          for (let i = 1; i <= totalSlots; i++) {\r\n            initialSlots.push({\r\n              slotNumber: i,\r\n              isOccupied: false,\r\n              isReserved: false,\r\n              location: `A${i}`,\r\n              slotType: 'BOTH'\r\n            });\r\n          }\r\n          setRealtimeSlots(initialSlots);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching initial slots:', error);\r\n        // Fallback to default initialization\r\n        const initialSlots = [];\r\n        for (let i = 1; i <= totalSlots; i++) {\r\n          initialSlots.push({\r\n            slotNumber: i,\r\n            isOccupied: false,\r\n            isReserved: false,\r\n            location: `A${i}`,\r\n            slotType: 'BOTH'\r\n          });\r\n        }\r\n        setRealtimeSlots(initialSlots);\r\n      }\r\n    };\r\n    \r\n    initializeSlots();\r\n    \r\n    // Subscribe to real-time updates from the ESP32\r\n    const unsubscribeSlot = socketService.subscribeToSlotUpdates((data) => {\r\n      setIsSystemOnline(true);\r\n      console.log(\"Slot update received:\", data);\r\n      \r\n      let freeSlots = [];\r\n      \r\n      // Handle slot status updates\r\n      if (data === \"FULL\") {\r\n        setAvailableSlots(0);\r\n        setFreeSlotsList([]);\r\n        freeSlots = [];\r\n      } else {\r\n        // Parse comma-separated list of available slots\r\n        freeSlots = data.split(\",\").map(Number);\r\n        setFreeSlotsList(freeSlots);\r\n        setAvailableSlots(freeSlots.length);\r\n      }\r\n      \r\n      // Update realtime slots structure to match hardware data\r\n      // IMPORTANT: Only update isOccupied, preserve reservation status\r\n      setRealtimeSlots(prevSlots => \r\n        prevSlots.map(slot => ({\r\n          ...slot,\r\n          // A slot is occupied if it's not in the free list AND not reserved\r\n          // Reserved slots should not be marked as occupied even if sensor detects something\r\n          isOccupied: !freeSlots.includes(slot.slotNumber) && !slot.isReserved\r\n        }))\r\n      );\r\n    });\r\n    \r\n    // Subscribe to database slot updates (for reservations)\r\n    const unsubscribeDatabaseSlot = socketService.subscribeToDatabaseSlotUpdates((data) => {\r\n      console.log(\"Database slot update received:\", data);\r\n      // Update the realtime slots with reservation info\r\n      setRealtimeSlots(prevSlots => \r\n        prevSlots.map(slot => \r\n          slot.slotNumber === data.slotNumber \r\n            ? { \r\n                ...slot, \r\n                isOccupied: data.isOccupied,\r\n                isReserved: data.isReserved,\r\n                reservedBy: data.reservedBy || null,\r\n                vehicleNumberPlate: data.vehicleNumberPlate || null\r\n              }\r\n            : slot\r\n        )\r\n      );\r\n      \r\n      // If a slot gets reserved, update the free slots list to exclude it\r\n      if (data.isReserved) {\r\n        setFreeSlotsList(prev => prev.filter(slotNum => slotNum !== data.slotNumber));\r\n      } else if (!data.isOccupied) {\r\n        // If a slot gets unreserved and not occupied, add it to free slots\r\n        setFreeSlotsList(prev => {\r\n          if (!prev.includes(data.slotNumber)) {\r\n            return [...prev, data.slotNumber].sort();\r\n          }\r\n          return prev;\r\n        });\r\n      }\r\n    });\r\n    \r\n    const unsubscribeGate = socketService.subscribeToGateUpdates((data) => {\r\n      setIsSystemOnline(true); // Mark system as online when any data is received\r\n      console.log(\"Gate update received:\", data);\r\n      setGateStatus(data);\r\n    });\r\n    const unsubscribeEntryGate = socketService.subscribeToEntryGateUpdates((data) => {\r\n      setIsSystemOnline(true);\r\n      setEntryGateStatus(String(data||'').toUpperCase());\r\n    });\r\n    const unsubscribeExitGate = socketService.subscribeToExitGateUpdates((data) => {\r\n      setIsSystemOnline(true);\r\n      setExitGateStatus(String(data||'').toUpperCase());\r\n    });\r\n    \r\n    const unsubscribeDevice = socketService.subscribeToDeviceStatus((data) => {\r\n      setIsSystemOnline(true); // Mark system as online when any data is received\r\n      console.log(\"Device status update:\", data);\r\n    });\r\n    \r\n    // Cleanup subscriptions on component unmount\r\n    return () => {\r\n      unsubscribeSlot();\r\n      unsubscribeDatabaseSlot();\r\n      unsubscribeGate();\r\n      unsubscribeEntryGate();\r\n      unsubscribeExitGate();\r\n      unsubscribeDevice();\r\n    };\r\n  }, [totalSlots]);\r\n\r\n  // Update available slots count whenever realtime slots change\r\n  useEffect(() => {\r\n    const available = realtimeSlots.filter(slot => !slot.isOccupied && !slot.isReserved).length;\r\n    setAvailableSlots(available);\r\n  }, [realtimeSlots]);\r\n\r\n  // Function to determine slot CSS class based on occupancy and reservation status\r\n  const getSlotClass = (slotNumber) => {\r\n    const slot = realtimeSlots.find(s => s.slotNumber === slotNumber);\r\n    if (!slot) {\r\n      // Fallback to old logic if slot not found in realtime data\r\n      return freeSlotsList.includes(slotNumber) ? \"slot available\" : \"slot occupied\";\r\n    }\r\n    \r\n    if (slot.isReserved) return \"slot reserved\";\r\n    if (slot.isOccupied) return \"slot occupied\";\r\n    return \"slot available\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {/* Welcome Popup */}\r\n      {showWelcomePopup && (\r\n        <>\r\n          <div className=\"overlay\" onClick={() => setShowWelcomePopup(false)} />\r\n          <div className=\"welcome-popup\">\r\n            <h2>Welcome to the Intelligent Urban Parking System</h2>\r\n            <div className=\"system-status\">\r\n              <div className={`status-indicator ${isSystemOnline ? 'online' : 'offline'}`}>\r\n                <span className={`status-dot ${isSystemOnline ? 'online' : 'offline'}`}></span>\r\n                System {isSystemOnline ? 'Online' : 'Offline'}\r\n              </div>\r\n            </div>\r\n            <button className=\"close-button\" onClick={() => setShowWelcomePopup(false)}>\r\n              Get Started\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      <header>\r\n        <h1>Smart Parking System</h1>\r\n        <p className=\"subtitle\">Real-time parking lot monitoring</p>\r\n        <div className=\"device-status\">\r\n          System:{\" \"}\r\n          {isSystemOnline && (\r\n            <span className=\"status-online\">ONLINE</span>\r\n          )}\r\n        </div>\r\n        {user && (\r\n          <div style={{ marginTop: 8 }}>\r\n            <small>Signed in as {user.name} ({user.phone})</small>\r\n            {Array.isArray(user.vehicles) && user.vehicles.length > 0 && (\r\n              <div style={{ marginTop: 4 }}>\r\n                <small>Vehicles: {user.vehicles.map(v => `${v.type}:${v.numberPlate}`).join(', ')}</small>\r\n              </div>\r\n            )}\r\n            <button style={{ marginLeft: 8 }} onClick={logout}>Logout</button>\r\n          </div>\r\n        )}\r\n      </header>\r\n\r\n      <main>\r\n        {/* Tab Navigation */}\r\n        <div className=\"tab-navigation\">\r\n          <button \r\n            className={`tab-button ${activeTab === 'monitor' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('monitor')}\r\n          >\r\n            📊 Live Monitor\r\n          </button>\r\n          <button \r\n            className={`tab-button ${activeTab === 'reserve' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('reserve')}\r\n          >\r\n            🚗 Reserve Slot\r\n          </button>\r\n        </div>\r\n\r\n        {/* Tab Content */}\r\n        {activeTab === 'monitor' ? (\r\n          <section className=\"status-section\">\r\n            <div className=\"status-card\">\r\n              <h2>Parking Availability</h2>\r\n              <div className=\"availability-display\">\r\n                <div className=\"count-display\">\r\n                  <span id=\"available-count\">{availableSlots}</span>\r\n                  <span className=\"count-label\">Available</span>\r\n                </div>\r\n                <div className=\"count-display\">\r\n                  <span id=\"total-count\">{totalSlots}</span>\r\n                  <span className=\"count-label\">Total</span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"slots-container\">\r\n                <h3>Slot Status</h3>\r\n                <div className=\"parking-grid\">\r\n                  {Array.from({length: totalSlots}, (_, i) => i + 1).map(slotNum => (\r\n                    <div\r\n                      key={slotNum}\r\n                      className={getSlotClass(slotNum)}\r\n                      id={`slot-${slotNum}`}\r\n                    >\r\n                      {slotNum}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"status-card\">\r\n              <h2>Gate Status</h2>\r\n              <div className=\"gate-status\">\r\n                <div \r\n                  className={`gate-indicator ${gateStatus === \"OPEN\" ? \"open\" : \"closed\"}`} \r\n                  id=\"gate-indicator\"\r\n                ></div>\r\n                <span id=\"gate-status-text\">{gateStatus}</span>\r\n              </div>\r\n              <div className=\"gate-info\" style={{marginTop:8}}>\r\n                <small>Entry: {entryGateStatus} | Exit: {exitGateStatus}</small>\r\n              </div>\r\n              <div className=\"gate-info\">\r\n                <p>\r\n                  The gate automatically opens when a vehicle is detected and parking space is available.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        ) : (\r\n          <section className=\"reservation-section\">\r\n            <SlotReservation user={user} realtimeSlots={realtimeSlots} />\r\n          </section>\r\n        )}\r\n      </main>\r\n\r\n      <footer>\r\n        <p>&copy; 2025 Smart Parking System</p>\r\n        <Link to=\"/admin\" className=\"admin-link\">Admin Panel</Link>\r\n      </footer>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}