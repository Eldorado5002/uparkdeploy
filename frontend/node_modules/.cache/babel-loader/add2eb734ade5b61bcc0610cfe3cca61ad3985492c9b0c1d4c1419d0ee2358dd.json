{"ast":null,"code":"import _objectSpread from\"C:/Users/nagas/Desktop/Uparkweb/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import'./SlotReservation.css';import socketService from'../services/socketService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SlotReservation=_ref=>{let{user,realtimeSlots}=_ref;const[slots,setSlots]=useState([]);const[selectedSlot,setSelectedSlot]=useState(null);const[showVehicleModal,setShowVehicleModal]=useState(false);const[showPaymentModal,setShowPaymentModal]=useState(false);const[selectedVehicle,setSelectedVehicle]=useState(null);const[loading,setLoading]=useState(false);const[refreshing,setRefreshing]=useState(false);const[reservation,setReservation]=useState(null);const[userReservations,setUserReservations]=useState([]);const[message,setMessage]=useState({text:'',type:''});const[bookingDuration,setBookingDuration]=useState(1);const[durationType,setDurationType]=useState('HOURLY');const[calculatedPrice,setCalculatedPrice]=useState(0);const[bookingProfile,setBookingProfile]=useState(null);// Use realtime slots if provided, otherwise fetch from API\nuseEffect(()=>{if(realtimeSlots&&realtimeSlots.length>0){console.log('Using realtime slots:',realtimeSlots);setSlots(realtimeSlots);}else{console.log('No realtime slots provided, fetching from API');fetchSlots();}},[realtimeSlots]);// Update local slots when realtime slots change\nuseEffect(()=>{if(realtimeSlots&&realtimeSlots.length>0){setSlots(realtimeSlots);}},[realtimeSlots]);useEffect(()=>{// Only fetch user-specific data\nif(user&&user.phone){fetchUserReservations();fetchBookingProfile();}// If no realtime slots provided, set up traditional socket subscriptions\nif(!realtimeSlots||realtimeSlots.length===0){// Subscribe to real-time slot updates\nconst unsubscribeSlot=socketService.subscribeToSlotUpdates(data=>{console.log(\"SlotReservation: Real-time slot update received:\",data);// Refresh slots when we receive real-time updates\nfetchSlots();});// Subscribe to database slot updates (when hardware data syncs with database)\nconst unsubscribeDatabaseSlot=socketService.subscribeToDatabaseSlotUpdates(data=>{console.log(\"SlotReservation: Database slot update received:\",data);// Update local slots state immediately for better user experience\nsetSlots(prevSlots=>{const updatedSlots=prevSlots.map(slot=>slot.slotNumber===data.slotNumber?_objectSpread(_objectSpread({},slot),{},{isOccupied:data.isOccupied,isReserved:data.isReserved,reservedBy:data.reservedBy||null,vehicleNumberPlate:data.vehicleNumberPlate||null}):slot);console.log(\"Updated slot \".concat(data.slotNumber,\" locally:\"),updatedSlots.find(s=>s.slotNumber===data.slotNumber));return updatedSlots;});});// Also set up periodic refresh as backup (every 10 seconds)\nconst intervalId=setInterval(()=>{fetchSlots();},10000);// Cleanup subscription and interval on component unmount\nreturn()=>{unsubscribeSlot();unsubscribeDatabaseSlot();clearInterval(intervalId);};}},[user,realtimeSlots]);useEffect(()=>{if(selectedVehicle){calculatePrice();}},[selectedVehicle,bookingDuration,durationType]);const fetchSlots=async()=>{try{setRefreshing(true);console.log('Fetching slots...');const response=await fetch('/api/slots');console.log('Response status:',response.status);const data=await response.json();console.log('Fetched slots data:',data);if(data.success){console.log('Previous slots:',slots.length>0?slots:'empty');setSlots(data.slots);console.log('Slots set to state:',data.slots);console.log('Available slots count:',data.slots.filter(s=>!s.isOccupied&&!s.isReserved).length);console.log('Reserved slots count:',data.slots.filter(s=>s.isReserved).length);console.log('Occupied slots count:',data.slots.filter(s=>s.isOccupied).length);}else{console.error('Failed to fetch slots:',data);}}catch(error){console.error('Error fetching slots:',error);}finally{setRefreshing(false);}};const fetchUserReservations=async()=>{try{const response=await fetch(\"/api/reservations/user/\".concat(user.phone));const data=await response.json();if(data.success){setUserReservations(data.reservations);}}catch(error){console.error('Error fetching reservations:',error);}};const fetchBookingProfile=async()=>{try{const response=await fetch(\"/api/users/booking-profile/\".concat(user.phone));const data=await response.json();if(data.success){setBookingProfile(data.profile);}}catch(error){console.error('Error fetching booking profile:',error);}};const calculatePrice=async()=>{if(!selectedVehicle)return;try{const response=await fetch('/api/reservations/calculate-price',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({vehicleType:selectedVehicle.type,duration:bookingDuration,durationType})});const data=await response.json();if(data.success){setCalculatedPrice(data.pricing.totalAmount);}}catch(error){console.error('Error calculating price:',error);}};const showMessage=function(text){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'info';setMessage({text,type});setTimeout(()=>setMessage({text:'',type:''}),5000);};const handleSlotClick=slot=>{if(slot.isOccupied||slot.isReserved){showMessage('This slot is not available','error');return;}// Check if user already has an active reservation\nconst activeReservation=userReservations.find(r=>r.status==='ACTIVE'&&(r.paymentStatus==='PENDING'||r.paymentStatus==='COMPLETED'));if(activeReservation){showMessage('You already have an active reservation','error');return;}if(!user.vehicles||user.vehicles.length===0){showMessage('Please add vehicles to your profile first','error');return;}setSelectedSlot(slot);setShowVehicleModal(true);};const handleVehicleSelect=vehicle=>{setSelectedVehicle(vehicle);setShowVehicleModal(false);setShowPaymentModal(true);};const createReservation=async()=>{if(!selectedSlot||!selectedVehicle)return;setLoading(true);// Only do optimistic update if we're not using realtime slots from parent\n// (because realtime slots will be updated by the parent component via Socket.IO)\nconst originalSlots=[...slots];if(!realtimeSlots||realtimeSlots.length===0){// Optimistic update: immediately mark slot as reserved in UI\nsetSlots(prevSlots=>prevSlots.map(slot=>slot.slotNumber===selectedSlot.slotNumber?_objectSpread(_objectSpread({},slot),{},{isReserved:true,reservedBy:user.phone,vehicleNumberPlate:selectedVehicle.numberPlate}):slot));}try{const response=await fetch('/api/reservations/create',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({phone:user.phone,slotNumber:selectedSlot.slotNumber,vehicleNumberPlate:selectedVehicle.numberPlate,vehicleType:selectedVehicle.type,duration:bookingDuration,durationType,bookingStartTime:new Date().toISOString()})});const data=await response.json();if(data.success){setReservation(data.reservation);showMessage('Reservation created successfully!','success');setShowPaymentModal(false);setSelectedSlot(null);setSelectedVehicle(null);setReservation(null);// If using realtime slots, don't fetch - parent will update via Socket.IO\nif(!realtimeSlots||realtimeSlots.length===0){fetchSlots();}fetchUserReservations();// Refresh user reservations\nfetchBookingProfile();// Refresh booking profile\n}else{// Revert optimistic update on error (only if not using realtime slots)\nif(!realtimeSlots||realtimeSlots.length===0){setSlots(originalSlots);}showMessage(data.error||'Failed to create reservation','error');setShowPaymentModal(false);}}catch(error){console.error('Error creating reservation:',error);// Revert optimistic update on error (only if not using realtime slots)\nif(!realtimeSlots||realtimeSlots.length===0){setSlots(originalSlots);}showMessage('Failed to create reservation','error');setShowPaymentModal(false);}setLoading(false);};const processPayment=async()=>{if(!reservation)return;setLoading(true);try{const response=await fetch('/api/reservations/payment',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({reservationId:reservation.id,paymentMethod:'MOCK'})});const data=await response.json();if(data.success){showMessage(\"Payment successful! Slot \".concat(reservation.slotNumber,\" is now reserved.\"),'success');setShowPaymentModal(false);setSelectedSlot(null);setSelectedVehicle(null);setReservation(null);fetchSlots();// Refresh slots\nfetchUserReservations();// Refresh user reservations\n}else{showMessage(data.error||'Payment failed','error');}}catch(error){console.error('Error processing payment:',error);showMessage('Payment failed','error');}setLoading(false);};const cancelReservation=async reservationId=>{if(!window.confirm('Are you sure you want to cancel this reservation?'))return;try{const response=await fetch('/api/reservations/cancel',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({reservationId,userPhone:user.phone})});const data=await response.json();if(data.success){showMessage('Reservation cancelled successfully','success');fetchSlots();fetchUserReservations();}else{showMessage(data.error||'Failed to cancel reservation','error');}}catch(error){console.error('Error cancelling reservation:',error);showMessage('Failed to cancel reservation','error');}};const getSlotClass=slot=>{if(slot.isOccupied)return'slot occupied';if(slot.isReserved)return'slot reserved';return'slot available';};const getSlotStatus=slot=>{if(slot.isOccupied)return'Occupied';if(slot.isReserved)return'Reserved';return'Available';};return/*#__PURE__*/_jsxs(\"div\",{className:\"slot-reservation-container\",children:[message.text&&/*#__PURE__*/_jsx(\"div\",{className:\"message \".concat(message.type),children:message.text}),/*#__PURE__*/_jsxs(\"header\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD83D\\uDE97 Parking Slot Reservation\"}),/*#__PURE__*/_jsx(\"p\",{className:\"subtitle\",children:\"Select an available slot to make a reservation\"})]}),/*#__PURE__*/_jsx(\"main\",{children:/*#__PURE__*/_jsxs(\"section\",{className:\"admin-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Parking Status\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"availability-display\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"count-display\",children:[/*#__PURE__*/_jsx(\"span\",{children:slots.filter(s=>!s.isOccupied&&!s.isReserved).length}),/*#__PURE__*/_jsx(\"span\",{className:\"count-label\",children:\"Available\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"count-display\",children:[/*#__PURE__*/_jsx(\"span\",{children:slots.length}),/*#__PURE__*/_jsx(\"span\",{className:\"count-label\",children:\"Total\"})]})]})]}),bookingProfile&&/*#__PURE__*/_jsxs(\"div\",{className:\"control-card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDC64 Your Profile\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-display\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-label\",children:\"Total Bookings:\"}),/*#__PURE__*/_jsx(\"span\",{children:bookingProfile.totalReservations})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-label\",children:\"Active:\"}),/*#__PURE__*/_jsx(\"span\",{children:bookingProfile.activeReservations})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-label\",children:\"Total Spent:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u20B9\",bookingProfile.totalAmountSpent||0]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"slots-card\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Select a Parking Slot\",refreshing&&/*#__PURE__*/_jsx(\"span\",{style:{color:'#3498db',fontSize:'0.8rem',marginLeft:'10px'},children:\"\\uD83D\\uDD04 Refreshing...\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchSlots,style:{marginLeft:'10px',padding:'5px 10px',backgroundColor:'#3498db',color:'white',border:'none',borderRadius:'4px',cursor:'pointer',fontSize:'0.8rem'},disabled:refreshing,children:\"\\uD83D\\uDD04 Refresh\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"slots-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"legend\",style:{display:'flex',justifyContent:'center',gap:'20px',marginBottom:'20px'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"legend-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"legend-color available\",style:{display:'inline-block',width:'20px',height:'20px',backgroundColor:'#2ecc71',marginRight:'8px'}}),/*#__PURE__*/_jsx(\"span\",{children:\"Available\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"legend-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"legend-color reserved\",style:{display:'inline-block',width:'20px',height:'20px',backgroundColor:'#f39c12',marginRight:'8px'}}),/*#__PURE__*/_jsx(\"span\",{children:\"Reserved\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"legend-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"legend-color occupied\",style:{display:'inline-block',width:'20px',height:'20px',backgroundColor:'#e74c3c',marginRight:'8px'}}),/*#__PURE__*/_jsx(\"span\",{children:\"Occupied\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"parking-grid admin-grid\",children:[console.log('Rendering slots, count:',slots.length,'slots:',slots),slots.map(slot=>/*#__PURE__*/_jsx(\"div\",{className:getSlotClass(slot),onClick:()=>handleSlotClick(slot),title:\"Slot \".concat(slot.slotNumber,\" - \").concat(getSlotStatus(slot)).concat(!slot.isOccupied&&!slot.isReserved?' - Click to reserve':''),style:{cursor:!slot.isOccupied&&!slot.isReserved?'pointer':'default'},children:slot.slotNumber},slot.slotNumber))]})]})]})]})}),userReservations.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"user-reservations\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCCB Your Reservations\"}),/*#__PURE__*/_jsx(\"div\",{className:\"reservations-list\",children:userReservations.filter(r=>r.status==='ACTIVE'||r.paymentStatus==='PENDING').map(reservation=>{var _reservation$status;return/*#__PURE__*/_jsxs(\"div\",{className:\"reservation-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"reservation-info\",children:[/*#__PURE__*/_jsxs(\"strong\",{children:[\"Slot #\",reservation.slotNumber]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Vehicle: \",reservation.vehicleNumberPlate,\" (\",reservation.vehicleType,\")\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Duration: \",reservation.bookingDuration,\"h (\",reservation.durationType,\")\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Amount: \\u20B9\",reservation.totalAmount]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Start: \",new Date(reservation.bookingStartTime).toLocaleString()]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"End: \",new Date(reservation.bookingEndTime).toLocaleString()]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Status: \",/*#__PURE__*/_jsx(\"span\",{className:\"status-\".concat((_reservation$status=reservation.status)===null||_reservation$status===void 0?void 0:_reservation$status.toLowerCase()),children:reservation.status})]}),/*#__PURE__*/_jsxs(\"small\",{children:[\"Booked: \",new Date(reservation.createdAt).toLocaleString()]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>cancelReservation(reservation._id),className:\"cancel-btn\",disabled:reservation.status!=='ACTIVE',children:reservation.status==='ACTIVE'?'Cancel':'Cancelled'})]},reservation._id);})})]}),showVehicleModal&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Select Vehicle for Slot #\",selectedSlot===null||selectedSlot===void 0?void 0:selectedSlot.slotNumber]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowVehicleModal(false),children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"duration-selection\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Select Parking Duration\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"duration-controls\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"duration-type-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"duration-tab \".concat(durationType==='HOURLY'?'active':''),onClick:()=>setDurationType('HOURLY'),children:\"Hourly\"}),/*#__PURE__*/_jsx(\"button\",{className:\"duration-tab \".concat(durationType==='DAILY'?'active':''),onClick:()=>setDurationType('DAILY'),children:\"Daily\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"duration-input\",children:/*#__PURE__*/_jsxs(\"label\",{children:[durationType==='HOURLY'?'Hours:':'Days:',/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"1\",max:durationType==='HOURLY'?'24':'7',value:bookingDuration,onChange:e=>setBookingDuration(parseInt(e.target.value)||1)})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pricing-info\",children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"Rates:\"})}),/*#__PURE__*/_jsx(\"p\",{children:\"2-Wheeler: \\u20B910/hour or \\u20B980/day\"}),/*#__PURE__*/_jsx(\"p\",{children:\"4-Wheeler: \\u20B920/hour or \\u20B9150/day\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"vehicles-list\",children:user.vehicles.map((vehicle,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"vehicle-card\",onClick:()=>handleVehicleSelect(vehicle),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"vehicle-info\",children:[/*#__PURE__*/_jsx(\"strong\",{children:vehicle.numberPlate}),/*#__PURE__*/_jsx(\"span\",{className:\"vehicle-type \".concat(vehicle.type==='2W'?'tw':'fw'),children:vehicle.type==='2W'?'Two Wheeler':'Four Wheeler'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"vehicle-rate\",children:[\"\\u20B9\",durationType==='HOURLY'?(vehicle.type==='2W'?10:20)*bookingDuration:(vehicle.type==='2W'?80:150)*Math.ceil(bookingDuration/24),/*#__PURE__*/_jsxs(\"small\",{children:[\"for \",bookingDuration,\" \",durationType==='HOURLY'?'hour(s)':'day(s)']})]})]},index))})]})]})}),showPaymentModal&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal payment-modal\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Confirm Booking\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowPaymentModal(false),children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"booking-summary\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Booking Details\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"booking-details\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Slot:\"}),\" #\",selectedSlot===null||selectedSlot===void 0?void 0:selectedSlot.slotNumber]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Vehicle:\"}),\" \",selectedVehicle===null||selectedVehicle===void 0?void 0:selectedVehicle.numberPlate]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Type:\"}),\" \",(selectedVehicle===null||selectedVehicle===void 0?void 0:selectedVehicle.type)==='2W'?'Two Wheeler':'Four Wheeler']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Duration:\"}),\" \",bookingDuration,\" \",durationType==='HOURLY'?'hour(s)':'day(s)']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Start Time:\"}),\" \",new Date().toLocaleString()]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"End Time:\"}),\" \",new Date(Date.now()+bookingDuration*60*60*1000).toLocaleString()]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Total Amount:\"}),\" \\u20B9\",calculatedPrice]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"booking-terms\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"terms-checkbox\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",required:true}),/*#__PURE__*/_jsx(\"span\",{children:\"I agree to the parking terms and conditions\"})]})})]}),/*#__PURE__*/_jsx(\"button\",{onClick:createReservation,disabled:loading,className:\"confirm-booking-btn\",children:loading?'Creating Reservation...':'Confirm Booking'})]})]})})]});};export default SlotReservation;","map":{"version":3,"names":["React","useState","useEffect","socketService","jsx","_jsx","jsxs","_jsxs","SlotReservation","_ref","user","realtimeSlots","slots","setSlots","selectedSlot","setSelectedSlot","showVehicleModal","setShowVehicleModal","showPaymentModal","setShowPaymentModal","selectedVehicle","setSelectedVehicle","loading","setLoading","refreshing","setRefreshing","reservation","setReservation","userReservations","setUserReservations","message","setMessage","text","type","bookingDuration","setBookingDuration","durationType","setDurationType","calculatedPrice","setCalculatedPrice","bookingProfile","setBookingProfile","length","console","log","fetchSlots","phone","fetchUserReservations","fetchBookingProfile","unsubscribeSlot","subscribeToSlotUpdates","data","unsubscribeDatabaseSlot","subscribeToDatabaseSlotUpdates","prevSlots","updatedSlots","map","slot","slotNumber","_objectSpread","isOccupied","isReserved","reservedBy","vehicleNumberPlate","concat","find","s","intervalId","setInterval","clearInterval","calculatePrice","response","fetch","status","json","success","filter","error","reservations","profile","method","headers","body","JSON","stringify","vehicleType","duration","pricing","totalAmount","showMessage","arguments","undefined","setTimeout","handleSlotClick","activeReservation","r","paymentStatus","vehicles","handleVehicleSelect","vehicle","createReservation","originalSlots","numberPlate","bookingStartTime","Date","toISOString","processPayment","reservationId","id","paymentMethod","cancelReservation","window","confirm","userPhone","getSlotClass","getSlotStatus","className","children","totalReservations","activeReservations","totalAmountSpent","style","color","fontSize","marginLeft","onClick","padding","backgroundColor","border","borderRadius","cursor","disabled","display","justifyContent","gap","marginBottom","width","height","marginRight","title","_reservation$status","toLocaleString","bookingEndTime","toLowerCase","createdAt","_id","min","max","value","onChange","e","parseInt","target","index","Math","ceil","now","required"],"sources":["C:/Users/nagas/Desktop/Uparkweb/frontend/src/components/SlotReservation.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './SlotReservation.css';\r\nimport socketService from '../services/socketService';\r\n\r\nconst SlotReservation = ({ user, realtimeSlots }) => {\r\n  const [slots, setSlots] = useState([]);\r\n  const [selectedSlot, setSelectedSlot] = useState(null);\r\n  const [showVehicleModal, setShowVehicleModal] = useState(false);\r\n  const [showPaymentModal, setShowPaymentModal] = useState(false);\r\n  const [selectedVehicle, setSelectedVehicle] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [reservation, setReservation] = useState(null);\r\n  const [userReservations, setUserReservations] = useState([]);\r\n  const [message, setMessage] = useState({ text: '', type: '' });\r\n  const [bookingDuration, setBookingDuration] = useState(1);\r\n  const [durationType, setDurationType] = useState('HOURLY');\r\n  const [calculatedPrice, setCalculatedPrice] = useState(0);\r\n  const [bookingProfile, setBookingProfile] = useState(null);\r\n\r\n  // Use realtime slots if provided, otherwise fetch from API\r\n  useEffect(() => {\r\n    if (realtimeSlots && realtimeSlots.length > 0) {\r\n      console.log('Using realtime slots:', realtimeSlots);\r\n      setSlots(realtimeSlots);\r\n    } else {\r\n      console.log('No realtime slots provided, fetching from API');\r\n      fetchSlots();\r\n    }\r\n  }, [realtimeSlots]);\r\n\r\n  // Update local slots when realtime slots change\r\n  useEffect(() => {\r\n    if (realtimeSlots && realtimeSlots.length > 0) {\r\n      setSlots(realtimeSlots);\r\n    }\r\n  }, [realtimeSlots]);\r\n\r\n  useEffect(() => {\r\n    // Only fetch user-specific data\r\n    if (user && user.phone) {\r\n      fetchUserReservations();\r\n      fetchBookingProfile();\r\n    }\r\n\r\n    // If no realtime slots provided, set up traditional socket subscriptions\r\n    if (!realtimeSlots || realtimeSlots.length === 0) {\r\n      // Subscribe to real-time slot updates\r\n      const unsubscribeSlot = socketService.subscribeToSlotUpdates((data) => {\r\n        console.log(\"SlotReservation: Real-time slot update received:\", data);\r\n        // Refresh slots when we receive real-time updates\r\n        fetchSlots();\r\n      });\r\n\r\n      // Subscribe to database slot updates (when hardware data syncs with database)\r\n      const unsubscribeDatabaseSlot = socketService.subscribeToDatabaseSlotUpdates((data) => {\r\n        console.log(\"SlotReservation: Database slot update received:\", data);\r\n        // Update local slots state immediately for better user experience\r\n        setSlots(prevSlots => {\r\n          const updatedSlots = prevSlots.map(slot => \r\n            slot.slotNumber === data.slotNumber \r\n              ? { \r\n                  ...slot, \r\n                  isOccupied: data.isOccupied, \r\n                  isReserved: data.isReserved,\r\n                  reservedBy: data.reservedBy || null,\r\n                  vehicleNumberPlate: data.vehicleNumberPlate || null\r\n                }\r\n              : slot\r\n          );\r\n          console.log(`Updated slot ${data.slotNumber} locally:`, updatedSlots.find(s => s.slotNumber === data.slotNumber));\r\n          return updatedSlots;\r\n        });\r\n      });\r\n\r\n      // Also set up periodic refresh as backup (every 10 seconds)\r\n      const intervalId = setInterval(() => {\r\n        fetchSlots();\r\n      }, 10000);\r\n\r\n      // Cleanup subscription and interval on component unmount\r\n      return () => {\r\n        unsubscribeSlot();\r\n        unsubscribeDatabaseSlot();\r\n        clearInterval(intervalId);\r\n      };\r\n    }\r\n  }, [user, realtimeSlots]);\r\n\r\n  useEffect(() => {\r\n    if (selectedVehicle) {\r\n      calculatePrice();\r\n    }\r\n  }, [selectedVehicle, bookingDuration, durationType]);\r\n\r\n  const fetchSlots = async () => {\r\n    try {\r\n      setRefreshing(true);\r\n      console.log('Fetching slots...');\r\n      const response = await fetch('/api/slots');\r\n      console.log('Response status:', response.status);\r\n      const data = await response.json();\r\n      console.log('Fetched slots data:', data);\r\n      if (data.success) {\r\n        console.log('Previous slots:', slots.length > 0 ? slots : 'empty');\r\n        setSlots(data.slots);\r\n        console.log('Slots set to state:', data.slots);\r\n        console.log('Available slots count:', data.slots.filter(s => !s.isOccupied && !s.isReserved).length);\r\n        console.log('Reserved slots count:', data.slots.filter(s => s.isReserved).length);\r\n        console.log('Occupied slots count:', data.slots.filter(s => s.isOccupied).length);\r\n      } else {\r\n        console.error('Failed to fetch slots:', data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching slots:', error);\r\n    } finally {\r\n      setRefreshing(false);\r\n    }\r\n  };\r\n\r\n  const fetchUserReservations = async () => {\r\n    try {\r\n      const response = await fetch(`/api/reservations/user/${user.phone}`);\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        setUserReservations(data.reservations);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching reservations:', error);\r\n    }\r\n  };\r\n\r\n  const fetchBookingProfile = async () => {\r\n    try {\r\n      const response = await fetch(`/api/users/booking-profile/${user.phone}`);\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        setBookingProfile(data.profile);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching booking profile:', error);\r\n    }\r\n  };\r\n\r\n  const calculatePrice = async () => {\r\n    if (!selectedVehicle) return;\r\n    \r\n    try {\r\n      const response = await fetch('/api/reservations/calculate-price', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          vehicleType: selectedVehicle.type,\r\n          duration: bookingDuration,\r\n          durationType\r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        setCalculatedPrice(data.pricing.totalAmount);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error calculating price:', error);\r\n    }\r\n  };\r\n\r\n  const showMessage = (text, type = 'info') => {\r\n    setMessage({ text, type });\r\n    setTimeout(() => setMessage({ text: '', type: '' }), 5000);\r\n  };\r\n\r\n  const handleSlotClick = (slot) => {\r\n    if (slot.isOccupied || slot.isReserved) {\r\n      showMessage('This slot is not available', 'error');\r\n      return;\r\n    }\r\n\r\n    // Check if user already has an active reservation\r\n    const activeReservation = userReservations.find(r => \r\n      r.status === 'ACTIVE' && (r.paymentStatus === 'PENDING' || r.paymentStatus === 'COMPLETED')\r\n    );\r\n    \r\n    if (activeReservation) {\r\n      showMessage('You already have an active reservation', 'error');\r\n      return;\r\n    }\r\n\r\n    if (!user.vehicles || user.vehicles.length === 0) {\r\n      showMessage('Please add vehicles to your profile first', 'error');\r\n      return;\r\n    }\r\n\r\n    setSelectedSlot(slot);\r\n    setShowVehicleModal(true);\r\n  };\r\n\r\n  const handleVehicleSelect = (vehicle) => {\r\n    setSelectedVehicle(vehicle);\r\n    setShowVehicleModal(false);\r\n    setShowPaymentModal(true);\r\n  };\r\n\r\n  const createReservation = async () => {\r\n    if (!selectedSlot || !selectedVehicle) return;\r\n\r\n    setLoading(true);\r\n    \r\n    // Only do optimistic update if we're not using realtime slots from parent\r\n    // (because realtime slots will be updated by the parent component via Socket.IO)\r\n    const originalSlots = [...slots];\r\n    if (!realtimeSlots || realtimeSlots.length === 0) {\r\n      // Optimistic update: immediately mark slot as reserved in UI\r\n      setSlots(prevSlots => \r\n        prevSlots.map(slot => \r\n          slot.slotNumber === selectedSlot.slotNumber \r\n            ? { ...slot, isReserved: true, reservedBy: user.phone, vehicleNumberPlate: selectedVehicle.numberPlate }\r\n            : slot\r\n        )\r\n      );\r\n    }\r\n    \r\n    try {\r\n      const response = await fetch('/api/reservations/create', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          phone: user.phone,\r\n          slotNumber: selectedSlot.slotNumber,\r\n          vehicleNumberPlate: selectedVehicle.numberPlate,\r\n          vehicleType: selectedVehicle.type,\r\n          duration: bookingDuration,\r\n          durationType,\r\n          bookingStartTime: new Date().toISOString()\r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        setReservation(data.reservation);\r\n        showMessage('Reservation created successfully!', 'success');\r\n        setShowPaymentModal(false);\r\n        setSelectedSlot(null);\r\n        setSelectedVehicle(null);\r\n        setReservation(null);\r\n        // If using realtime slots, don't fetch - parent will update via Socket.IO\r\n        if (!realtimeSlots || realtimeSlots.length === 0) {\r\n          fetchSlots();\r\n        }\r\n        fetchUserReservations(); // Refresh user reservations\r\n        fetchBookingProfile(); // Refresh booking profile\r\n      } else {\r\n        // Revert optimistic update on error (only if not using realtime slots)\r\n        if (!realtimeSlots || realtimeSlots.length === 0) {\r\n          setSlots(originalSlots);\r\n        }\r\n        showMessage(data.error || 'Failed to create reservation', 'error');\r\n        setShowPaymentModal(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating reservation:', error);\r\n      // Revert optimistic update on error (only if not using realtime slots)\r\n      if (!realtimeSlots || realtimeSlots.length === 0) {\r\n        setSlots(originalSlots);\r\n      }\r\n      showMessage('Failed to create reservation', 'error');\r\n      setShowPaymentModal(false);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const processPayment = async () => {\r\n    if (!reservation) return;\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch('/api/reservations/payment', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          reservationId: reservation.id,\r\n          paymentMethod: 'MOCK'\r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        showMessage(`Payment successful! Slot ${reservation.slotNumber} is now reserved.`, 'success');\r\n        setShowPaymentModal(false);\r\n        setSelectedSlot(null);\r\n        setSelectedVehicle(null);\r\n        setReservation(null);\r\n        fetchSlots(); // Refresh slots\r\n        fetchUserReservations(); // Refresh user reservations\r\n      } else {\r\n        showMessage(data.error || 'Payment failed', 'error');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error processing payment:', error);\r\n      showMessage('Payment failed', 'error');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const cancelReservation = async (reservationId) => {\r\n    if (!window.confirm('Are you sure you want to cancel this reservation?')) return;\r\n\r\n    try {\r\n      const response = await fetch('/api/reservations/cancel', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          reservationId,\r\n          userPhone: user.phone\r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        showMessage('Reservation cancelled successfully', 'success');\r\n        fetchSlots();\r\n        fetchUserReservations();\r\n      } else {\r\n        showMessage(data.error || 'Failed to cancel reservation', 'error');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error cancelling reservation:', error);\r\n      showMessage('Failed to cancel reservation', 'error');\r\n    }\r\n  };\r\n\r\n  const getSlotClass = (slot) => {\r\n    if (slot.isOccupied) return 'slot occupied';\r\n    if (slot.isReserved) return 'slot reserved';\r\n    return 'slot available';\r\n  };\r\n\r\n  const getSlotStatus = (slot) => {\r\n    if (slot.isOccupied) return 'Occupied';\r\n    if (slot.isReserved) return 'Reserved';\r\n    return 'Available';\r\n  };\r\n\r\n  return (\r\n    <div className=\"slot-reservation-container\">\r\n      {message.text && (\r\n        <div className={`message ${message.type}`}>\r\n          {message.text}\r\n        </div>\r\n      )}\r\n\r\n      <header>\r\n        <h1>🚗 Parking Slot Reservation</h1>\r\n        <p className=\"subtitle\">Select an available slot to make a reservation</p>\r\n      </header>\r\n\r\n      <main>\r\n        <section className=\"admin-section\">\r\n          {/* Status Overview Card */}\r\n          <div className=\"status-card\">\r\n            <h2>Parking Status</h2>\r\n            <div className=\"availability-display\">\r\n              <div className=\"count-display\">\r\n                <span>{slots.filter(s => !s.isOccupied && !s.isReserved).length}</span>\r\n                <span className=\"count-label\">Available</span>\r\n              </div>\r\n              <div className=\"count-display\">\r\n                <span>{slots.length}</span>\r\n                <span className=\"count-label\">Total</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* User Booking Profile */}\r\n          {bookingProfile && (\r\n            <div className=\"control-card\">\r\n              <h2>👤 Your Profile</h2>\r\n              <div className=\"status-display\">\r\n                <div className=\"status-item\">\r\n                  <span className=\"status-label\">Total Bookings:</span>\r\n                  <span>{bookingProfile.totalReservations}</span>\r\n                </div>\r\n                <div className=\"status-item\">\r\n                  <span className=\"status-label\">Active:</span>\r\n                  <span>{bookingProfile.activeReservations}</span>\r\n                </div>\r\n                <div className=\"status-item\">\r\n                  <span className=\"status-label\">Total Spent:</span>\r\n                  <span>₹{bookingProfile.totalAmountSpent || 0}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Parking Slots Grid Card */}\r\n          <div className=\"slots-card\">\r\n            <h2>\r\n              Select a Parking Slot \r\n              {refreshing && <span style={{color: '#3498db', fontSize: '0.8rem', marginLeft: '10px'}}>🔄 Refreshing...</span>}\r\n              <button \r\n                onClick={fetchSlots} \r\n                style={{\r\n                  marginLeft: '10px', \r\n                  padding: '5px 10px', \r\n                  backgroundColor: '#3498db', \r\n                  color: 'white', \r\n                  border: 'none', \r\n                  borderRadius: '4px', \r\n                  cursor: 'pointer',\r\n                  fontSize: '0.8rem'\r\n                }}\r\n                disabled={refreshing}\r\n              >\r\n                🔄 Refresh\r\n              </button>\r\n            </h2>\r\n            <div className=\"slots-container\">\r\n              <div className=\"legend\" style={{display: 'flex', justifyContent: 'center', gap: '20px', marginBottom: '20px'}}>\r\n                <div className=\"legend-item\">\r\n                  <span className=\"legend-color available\" style={{display: 'inline-block', width: '20px', height: '20px', backgroundColor: '#2ecc71', marginRight: '8px'}}></span>\r\n                  <span>Available</span>\r\n                </div>\r\n                <div className=\"legend-item\">\r\n                  <span className=\"legend-color reserved\" style={{display: 'inline-block', width: '20px', height: '20px', backgroundColor: '#f39c12', marginRight: '8px'}}></span>\r\n                  <span>Reserved</span>\r\n                </div>\r\n                <div className=\"legend-item\">\r\n                  <span className=\"legend-color occupied\" style={{display: 'inline-block', width: '20px', height: '20px', backgroundColor: '#e74c3c', marginRight: '8px'}}></span>\r\n                  <span>Occupied</span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"parking-grid admin-grid\">\r\n                {console.log('Rendering slots, count:', slots.length, 'slots:', slots)}\r\n                {slots.map(slot => (\r\n                  <div\r\n                    key={slot.slotNumber}\r\n                    className={getSlotClass(slot)}\r\n                    onClick={() => handleSlotClick(slot)}\r\n                    title={`Slot ${slot.slotNumber} - ${getSlotStatus(slot)}${!slot.isOccupied && !slot.isReserved ? ' - Click to reserve' : ''}`}\r\n                    style={{cursor: (!slot.isOccupied && !slot.isReserved) ? 'pointer' : 'default'}}\r\n                  >\r\n                    {slot.slotNumber}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n\r\n        {/* Active Reservations */}\r\n        {userReservations.length > 0 && (\r\n          <div className=\"user-reservations\">\r\n            <h3>📋 Your Reservations</h3>\r\n            <div className=\"reservations-list\">\r\n              {userReservations\r\n                .filter(r => r.status === 'ACTIVE' || r.paymentStatus === 'PENDING')\r\n                .map(reservation => (\r\n                <div key={reservation._id} className=\"reservation-card\">\r\n                  <div className=\"reservation-info\">\r\n                    <strong>Slot #{reservation.slotNumber}</strong>\r\n                    <p>Vehicle: {reservation.vehicleNumberPlate} ({reservation.vehicleType})</p>\r\n                    <p>Duration: {reservation.bookingDuration}h ({reservation.durationType})</p>\r\n                    <p>Amount: ₹{reservation.totalAmount}</p>\r\n                    <p>Start: {new Date(reservation.bookingStartTime).toLocaleString()}</p>\r\n                    <p>End: {new Date(reservation.bookingEndTime).toLocaleString()}</p>\r\n                    <p>Status: <span className={`status-${reservation.status?.toLowerCase()}`}>{reservation.status}</span></p>\r\n                    <small>Booked: {new Date(reservation.createdAt).toLocaleString()}</small>\r\n                  </div>\r\n                  <button \r\n                    onClick={() => cancelReservation(reservation._id)}\r\n                    className=\"cancel-btn\"\r\n                    disabled={reservation.status !== 'ACTIVE'}\r\n                  >\r\n                    {reservation.status === 'ACTIVE' ? 'Cancel' : 'Cancelled'}\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n      {/* Vehicle Selection Modal */}\r\n      {showVehicleModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <div className=\"modal-header\">\r\n              <h3>Select Vehicle for Slot #{selectedSlot?.slotNumber}</h3>\r\n              <button onClick={() => setShowVehicleModal(false)}>×</button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div className=\"duration-selection\">\r\n                <h4>Select Parking Duration</h4>\r\n                <div className=\"duration-controls\">\r\n                  <div className=\"duration-type-tabs\">\r\n                    <button \r\n                      className={`duration-tab ${durationType === 'HOURLY' ? 'active' : ''}`}\r\n                      onClick={() => setDurationType('HOURLY')}\r\n                    >\r\n                      Hourly\r\n                    </button>\r\n                    <button \r\n                      className={`duration-tab ${durationType === 'DAILY' ? 'active' : ''}`}\r\n                      onClick={() => setDurationType('DAILY')}\r\n                    >\r\n                      Daily\r\n                    </button>\r\n                  </div>\r\n                  \r\n                  <div className=\"duration-input\">\r\n                    <label>\r\n                      {durationType === 'HOURLY' ? 'Hours:' : 'Days:'}\r\n                      <input \r\n                        type=\"number\" \r\n                        min=\"1\" \r\n                        max={durationType === 'HOURLY' ? '24' : '7'} \r\n                        value={bookingDuration}\r\n                        onChange={(e) => setBookingDuration(parseInt(e.target.value) || 1)}\r\n                      />\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"pricing-info\">\r\n                  <p><strong>Rates:</strong></p>\r\n                  <p>2-Wheeler: ₹10/hour or ₹80/day</p>\r\n                  <p>4-Wheeler: ₹20/hour or ₹150/day</p>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"vehicles-list\">\r\n                {user.vehicles.map((vehicle, index) => (\r\n                  <div \r\n                    key={index}\r\n                    className=\"vehicle-card\"\r\n                    onClick={() => handleVehicleSelect(vehicle)}\r\n                  >\r\n                    <div className=\"vehicle-info\">\r\n                      <strong>{vehicle.numberPlate}</strong>\r\n                      <span className={`vehicle-type ${vehicle.type === '2W' ? 'tw' : 'fw'}`}>\r\n                        {vehicle.type === '2W' ? 'Two Wheeler' : 'Four Wheeler'}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"vehicle-rate\">\r\n                      ₹{durationType === 'HOURLY' \r\n                        ? (vehicle.type === '2W' ? 10 : 20) * bookingDuration\r\n                        : (vehicle.type === '2W' ? 80 : 150) * Math.ceil(bookingDuration / 24)\r\n                      }\r\n                      <small>for {bookingDuration} {durationType === 'HOURLY' ? 'hour(s)' : 'day(s)'}</small>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Booking Confirmation Modal */}\r\n      {showPaymentModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal payment-modal\">\r\n            <div className=\"modal-header\">\r\n              <h3>Confirm Booking</h3>\r\n              <button onClick={() => setShowPaymentModal(false)}>×</button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div className=\"booking-summary\">\r\n                <h4>Booking Details</h4>\r\n                <div className=\"booking-details\">\r\n                  <p><strong>Slot:</strong> #{selectedSlot?.slotNumber}</p>\r\n                  <p><strong>Vehicle:</strong> {selectedVehicle?.numberPlate}</p>\r\n                  <p><strong>Type:</strong> {selectedVehicle?.type === '2W' ? 'Two Wheeler' : 'Four Wheeler'}</p>\r\n                  <p><strong>Duration:</strong> {bookingDuration} {durationType === 'HOURLY' ? 'hour(s)' : 'day(s)'}</p>\r\n                  <p><strong>Start Time:</strong> {new Date().toLocaleString()}</p>\r\n                  <p><strong>End Time:</strong> {new Date(Date.now() + bookingDuration * 60 * 60 * 1000).toLocaleString()}</p>\r\n                  <p><strong>Total Amount:</strong> ₹{calculatedPrice}</p>\r\n                </div>\r\n                \r\n                <div className=\"booking-terms\">\r\n                  <label className=\"terms-checkbox\">\r\n                    <input type=\"checkbox\" required />\r\n                    <span>I agree to the parking terms and conditions</span>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              \r\n              <button \r\n                onClick={createReservation}\r\n                disabled={loading}\r\n                className=\"confirm-booking-btn\"\r\n              >\r\n                {loading ? 'Creating Reservation...' : 'Confirm Booking'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SlotReservation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}