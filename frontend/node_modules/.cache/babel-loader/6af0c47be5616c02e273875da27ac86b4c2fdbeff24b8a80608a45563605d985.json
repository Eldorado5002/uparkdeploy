{"ast":null,"code":"// src/services/api.js\nconst API_BASE=process.env.REACT_APP_BACKEND_URL||'http://localhost:5000';export async function requestOtp(_ref){let{name,phone}=_ref;const res=await fetch(\"\".concat(API_BASE,\"/api/auth/request-otp\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name,phone})});const data=await res.json();if(!res.ok)throw new Error(data.error||'Failed to request OTP');return data;// { success, expiresAt, devCode? }\n}export async function verifyOtp(_ref2){let{phone,code}=_ref2;const res=await fetch(\"\".concat(API_BASE,\"/api/auth/verify-otp\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({phone,code})});const data=await res.json();if(!res.ok)throw new Error(data.error||'Failed to verify OTP');return data;// { success, user, token }\n}export async function checkPhone(_ref3){let{phone}=_ref3;const res=await fetch(\"\".concat(API_BASE,\"/api/auth/check-phone\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({phone})});const data=await res.json();if(!res.ok)throw new Error(data.error||'Failed to check phone');return data;// { exists, user?, token? }\n}export async function updateVehicles(_ref4){let{phone,vehicles}=_ref4;const res=await fetch(\"\".concat(API_BASE,\"/api/users/update-vehicles\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({phone,vehicles})});const data=await res.json();if(!res.ok)throw new Error(data.error||'Failed to update vehicles');return data;// { success, user }\n}","map":{"version":3,"names":["API_BASE","process","env","REACT_APP_BACKEND_URL","requestOtp","_ref","name","phone","res","fetch","concat","method","headers","body","JSON","stringify","data","json","ok","Error","error","verifyOtp","_ref2","code","checkPhone","_ref3","updateVehicles","_ref4","vehicles"],"sources":["C:/Users/nagas/Desktop/Uparkweb/frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js\r\nconst API_BASE = process.env.REACT_APP_BACKEND_URL || 'http://localhost:5000';\r\n\r\nexport async function requestOtp({ name, phone }) {\r\n  const res = await fetch(`${API_BASE}/api/auth/request-otp`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ name, phone }),\r\n  });\r\n  const data = await res.json();\r\n  if (!res.ok) throw new Error(data.error || 'Failed to request OTP');\r\n  return data; // { success, expiresAt, devCode? }\r\n}\r\n\r\nexport async function verifyOtp({ phone, code }) {\r\n  const res = await fetch(`${API_BASE}/api/auth/verify-otp`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ phone, code }),\r\n  });\r\n  const data = await res.json();\r\n  if (!res.ok) throw new Error(data.error || 'Failed to verify OTP');\r\n  return data; // { success, user, token }\r\n}\r\n\r\nexport async function checkPhone({ phone }) {\r\n  const res = await fetch(`${API_BASE}/api/auth/check-phone`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ phone }),\r\n  });\r\n  const data = await res.json();\r\n  if (!res.ok) throw new Error(data.error || 'Failed to check phone');\r\n  return data; // { exists, user?, token? }\r\n}\r\n\r\nexport async function updateVehicles({ phone, vehicles }) {\r\n  const res = await fetch(`${API_BASE}/api/users/update-vehicles`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ phone, vehicles }),\r\n  });\r\n  const data = await res.json();\r\n  if (!res.ok) throw new Error(data.error || 'Failed to update vehicles');\r\n  return data; // { success, user }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}