{"ast":null,"code":"import _objectSpread from\"C:/Users/nagas/Desktop/Uparkweb/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// src/services/api.js\nconst API_BASE=process.env.REACT_APP_BACKEND_URL||'http://localhost:5000';console.log('üîó API_BASE configured as:',API_BASE);console.log('üåç Environment:',process.env.NODE_ENV);// Helper function to handle fetch errors with better debugging\nasync function handleFetch(url){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{console.log('üöÄ Making request to:',url);console.log('üì§ Request options:',options);const response=await fetch(url,_objectSpread(_objectSpread({},options),{},{headers:_objectSpread({'Content-Type':'application/json'},options.headers)}));console.log('üì• Response status:',response.status);console.log('üì• Response ok:',response.ok);return response;}catch(error){console.error('üö® Fetch error:',error);console.error('üö® Error type:',error.constructor.name);console.error('üö® Error message:',error.message);// Provide more helpful error messages\nif(error.message.includes('Failed to fetch')){throw new Error(\"Cannot connect to backend server at \".concat(API_BASE,\". Please check if the backend is running and the URL is correct.\"));}throw error;}}export async function requestOtp(_ref){let{name,phone}=_ref;try{const url=\"\".concat(API_BASE,\"/api/auth/request-otp\");const res=await handleFetch(url,{method:'POST',body:JSON.stringify({name,phone})});if(!res.ok){const text=await res.text();console.error('‚ùå Request OTP error response:',text);throw new Error(\"HTTP \".concat(res.status,\": \").concat(text));}const data=await res.json();console.log('‚úÖ Request OTP success:',data);return data;// { success, expiresAt, devCode? }\n}catch(error){console.error('‚ùå Request OTP error:',error);throw error;}}export async function verifyOtp(_ref2){let{phone,code}=_ref2;try{console.log('Making request to:',\"\".concat(API_BASE,\"/api/auth/verify-otp\"));const res=await fetch(\"\".concat(API_BASE,\"/api/auth/verify-otp\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({phone,code})});console.log('Response status:',res.status);if(!res.ok){const text=await res.text();console.error('Error response text:',text);throw new Error(\"HTTP \".concat(res.status,\": \").concat(text));}const data=await res.json();return data;// { success, user, token }\n}catch(error){console.error('Verify OTP error:',error);throw error;}}// Test function to verify backend connectivity\nexport async function testBackendConnection(){try{const url=\"\".concat(API_BASE,\"/api/health\");console.log('üîç Testing backend connection...');const res=await handleFetch(url,{method:'GET'});if(!res.ok){throw new Error(\"Backend health check failed with status \".concat(res.status));}const data=await res.json();console.log('‚úÖ Backend connection successful:',data);return data;}catch(error){console.error('‚ùå Backend connection failed:',error);throw error;}}export async function checkPhone(_ref3){let{phone}=_ref3;try{const url=\"\".concat(API_BASE,\"/api/auth/check-phone\");const res=await handleFetch(url,{method:'POST',body:JSON.stringify({phone})});if(!res.ok){const text=await res.text();console.error('‚ùå Check phone error response:',text);throw new Error(\"HTTP \".concat(res.status,\": \").concat(text));}const data=await res.json();console.log('‚úÖ Check phone success:',data);return data;// { exists, user?, token? }\n}catch(error){console.error('‚ùå Check phone error:',error);throw error;}}export async function updateVehicles(_ref4){let{phone,vehicles}=_ref4;const res=await fetch(\"\".concat(API_BASE,\"/api/users/update-vehicles\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({phone,vehicles})});const data=await res.json();if(!res.ok)throw new Error(data.error||'Failed to update vehicles');return data;// { success, user }\n}","map":{"version":3,"names":["API_BASE","process","env","REACT_APP_BACKEND_URL","console","log","NODE_ENV","handleFetch","url","options","arguments","length","undefined","response","fetch","_objectSpread","headers","status","ok","error","constructor","name","message","includes","Error","concat","requestOtp","_ref","phone","res","method","body","JSON","stringify","text","data","json","verifyOtp","_ref2","code","testBackendConnection","checkPhone","_ref3","updateVehicles","_ref4","vehicles"],"sources":["C:/Users/nagas/Desktop/Uparkweb/frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js\r\nconst API_BASE = process.env.REACT_APP_BACKEND_URL || 'http://localhost:5000';\r\n\r\nconsole.log('üîó API_BASE configured as:', API_BASE);\r\nconsole.log('üåç Environment:', process.env.NODE_ENV);\r\n\r\n// Helper function to handle fetch errors with better debugging\r\nasync function handleFetch(url, options = {}) {\r\n  try {\r\n    console.log('üöÄ Making request to:', url);\r\n    console.log('üì§ Request options:', options);\r\n    \r\n    const response = await fetch(url, {\r\n      ...options,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...options.headers,\r\n      },\r\n    });\r\n    \r\n    console.log('üì• Response status:', response.status);\r\n    console.log('üì• Response ok:', response.ok);\r\n    \r\n    return response;\r\n  } catch (error) {\r\n    console.error('üö® Fetch error:', error);\r\n    console.error('üö® Error type:', error.constructor.name);\r\n    console.error('üö® Error message:', error.message);\r\n    \r\n    // Provide more helpful error messages\r\n    if (error.message.includes('Failed to fetch')) {\r\n      throw new Error(`Cannot connect to backend server at ${API_BASE}. Please check if the backend is running and the URL is correct.`);\r\n    }\r\n    \r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function requestOtp({ name, phone }) {\r\n  try {\r\n    const url = `${API_BASE}/api/auth/request-otp`;\r\n    const res = await handleFetch(url, {\r\n      method: 'POST',\r\n      body: JSON.stringify({ name, phone }),\r\n    });\r\n    \r\n    if (!res.ok) {\r\n      const text = await res.text();\r\n      console.error('‚ùå Request OTP error response:', text);\r\n      throw new Error(`HTTP ${res.status}: ${text}`);\r\n    }\r\n    \r\n    const data = await res.json();\r\n    console.log('‚úÖ Request OTP success:', data);\r\n    return data; // { success, expiresAt, devCode? }\r\n  } catch (error) {\r\n    console.error('‚ùå Request OTP error:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function verifyOtp({ phone, code }) {\r\n  try {\r\n    console.log('Making request to:', `${API_BASE}/api/auth/verify-otp`);\r\n    const res = await fetch(`${API_BASE}/api/auth/verify-otp`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ phone, code }),\r\n    });\r\n    \r\n    console.log('Response status:', res.status);\r\n    \r\n    if (!res.ok) {\r\n      const text = await res.text();\r\n      console.error('Error response text:', text);\r\n      throw new Error(`HTTP ${res.status}: ${text}`);\r\n    }\r\n    \r\n    const data = await res.json();\r\n    return data; // { success, user, token }\r\n  } catch (error) {\r\n    console.error('Verify OTP error:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Test function to verify backend connectivity\r\nexport async function testBackendConnection() {\r\n  try {\r\n    const url = `${API_BASE}/api/health`;\r\n    console.log('üîç Testing backend connection...');\r\n    const res = await handleFetch(url, { method: 'GET' });\r\n    \r\n    if (!res.ok) {\r\n      throw new Error(`Backend health check failed with status ${res.status}`);\r\n    }\r\n    \r\n    const data = await res.json();\r\n    console.log('‚úÖ Backend connection successful:', data);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('‚ùå Backend connection failed:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function checkPhone({ phone }) {\r\n  try {\r\n    const url = `${API_BASE}/api/auth/check-phone`;\r\n    const res = await handleFetch(url, {\r\n      method: 'POST',\r\n      body: JSON.stringify({ phone }),\r\n    });\r\n    \r\n    if (!res.ok) {\r\n      const text = await res.text();\r\n      console.error('‚ùå Check phone error response:', text);\r\n      throw new Error(`HTTP ${res.status}: ${text}`);\r\n    }\r\n    \r\n    const data = await res.json();\r\n    console.log('‚úÖ Check phone success:', data);\r\n    return data; // { exists, user?, token? }\r\n  } catch (error) {\r\n    console.error('‚ùå Check phone error:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function updateVehicles({ phone, vehicles }) {\r\n  const res = await fetch(`${API_BASE}/api/users/update-vehicles`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ phone, vehicles }),\r\n  });\r\n  const data = await res.json();\r\n  if (!res.ok) throw new Error(data.error || 'Failed to update vehicles');\r\n  return data; // { success, user }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}